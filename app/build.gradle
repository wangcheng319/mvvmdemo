apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.coolweather.coolweatherjetpack"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('E:/mvvmdemo/ks/client_key.keystore')//keystore的路径
            storePassword 'chengmivico'
            keyAlias 'chengmidev'
            keyPassword 'chengmivico'
        }
        debug {
            storeFile file('E:/mvvmdemo/ks/client_key.keystore')//keystore的路径
            storePassword 'chengmivico'
            keyAlias 'chengmidev'
            keyPassword 'chengmivico'
        }

        preview {
            storeFile file('E:/mvvmdemo/ks/client_key.keystore')//keystore的路径
            storePassword 'chengmivico'
            keyAlias 'chengmidev'
            keyPassword 'chengmivico'
        }
    }

    buildTypes {
        debug {
            // applicationId添加后缀
            //比如defaultConfig中设置的applicationId为com.example.myapp
            //编译debug版本时applicationId将是com.example.myapp.dev
            applicationIdSuffix ".dev"

            //开发服务器地址
            buildConfigField "String", "BASE_URL", '"https://dev.example.com/api"'
            //开发环境 极光推送的AppKey
            buildConfigField "String", "JPUSH_APP_KEY", '"xxxxxx"'
        }

        release {
            applicationIdSuffix ".prod"
            //生产服务器地址
            buildConfigField "String", "BASE_URL", '"https://prod.example.com/api"'
            //生产环境 极光推送的AppKey
            buildConfigField "String", "JPUSH_APP_KEY", '"xxxxxx"'
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }


        //预生产版本
        /* 从给定的构建类型复制所有属性 */
        pre.initWith(release)
        pre {
            applicationIdSuffix ".pre"
            buildConfigField "String", "BASE_URL", '"https://pre.example.com/api"'
            matchingFallbacks = ['pre', 'debug', 'release']
        }
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0-alpha03"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha03'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'org.litepal.android:kotlin:3.0.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.5.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    def lifecycle_version = "2.0.0"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"


    //retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'

// 用Gson解析json的转换器
    implementation 'com.google.code.gson:gson:2.8.5'

//rxjava2
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.5'

    implementation "androidx.viewpager2:viewpager2:1.0.0"


}
